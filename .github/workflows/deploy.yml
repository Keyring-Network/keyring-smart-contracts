name: Deploy Contracts

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        type: choice
        options:
          - testnet
          - mainnet
          - "New network"

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      networks: ${{ steps.get-networks.outputs.networks }}
    steps:
      - uses: actions/checkout@v4
      - id: get-networks
        run: |
          chmod +x ./bin/listNetworks.sh
          NETWORKS=$(./bin/listNetworks.sh | jq -R . | jq -s . | jq '. + ["New network"]' -c)
          echo "networks=$NETWORKS" >> "$GITHUB_OUTPUT"
      - name: Validate network choice
        run: |
          if [[ "${{ github.event.inputs.environment }}" != "New network" ]]; then
            AVAILABLE_NETWORKS=$(./bin/listNetworks.sh)
            if ! echo "$AVAILABLE_NETWORKS" | grep -q "^${{ github.event.inputs.environment }}$"; then
              echo "Selected network ${{ github.event.inputs.environment }} is not in the list of available networks:"
              echo "$AVAILABLE_NETWORKS"
              exit 1
            fi
          fi

  deploy:
    needs: setup
    name: Deploy to ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install dependencies
        run: forge install

      - name: Run Forge build
        run: |
          forge --version
          forge build --sizes
        id: build

      - name: Deploy contracts
        env:
          RPC_URL: ${{ secrets[format('{0}_RPC_URL', github.event.inputs.environment)] }}
          PRIVATE_KEY: ${{ secrets[format('{0}_PRIVATE_KEY', github.event.inputs.environment)] }}
        run: |
          forge script script/Deploy.s.sol --rpc-url $RPC_URL --private-key $PRIVATE_KEY --broadcast
