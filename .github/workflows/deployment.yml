# This file is kept for reference but is no longer used.
# Please use the deploy.yml workflow instead.
# The content has been moved to .github/workflows/deploy.yml

name: deploy

on:
  workflow_call:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        type: string
  workflow_dispatch: {}

env:
  FOUNDRY_PROFILE: ci

jobs:
  get-networks:
    runs-on: ubuntu-latest
    outputs:
      network_list: ${{ steps.get-networks.outputs.networks }}
    steps:
      - uses: actions/checkout@v4
      - id: get-networks
        run: |
          chmod +x ./bin/listNetworks.sh
          NETWORKS=$(./bin/listNetworks.sh | jq -R . | jq -s . | jq '. + ["New network"]' -c)
          echo "networks=$NETWORKS" >> "$GITHUB_OUTPUT"

  trigger:
    needs: get-networks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        if: github.event_name == 'workflow_dispatch'
        with:
          script: |
            const networks = ${{ needs.get-networks.outputs.network_list }};
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deployment.yml',
              ref: context.ref,
              inputs: {
                environment: {
                  description: "Environment to deploy to",
                  required: true,
                  type: "choice",
                  options: networks
                }
              }
            });

  deploy:
    if: github.event_name == 'workflow_call'
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Validate network choice
        run: |
          chmod +x ./bin/listNetworks.sh
          AVAILABLE_NETWORKS=$(./bin/listNetworks.sh)
          if [[ "${{ inputs.environment }}" != "New network" ]] && ! echo "$AVAILABLE_NETWORKS" | grep -q "^${{ inputs.environment }}$"; then
            echo "Selected network ${{ inputs.environment }} is not in the list of available networks:"
            echo "$AVAILABLE_NETWORKS"
            exit 1
          fi

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install dependencies
        run: forge install

      - name: Run Forge build
        run: |
          forge --version
          forge build --sizes
        id: build

      - name: Deploy contracts
        env:
          RPC_URL: ${{ secrets[format('{0}_RPC_URL', inputs.environment)] }}
          PRIVATE_KEY: ${{ secrets[format('{0}_PRIVATE_KEY', inputs.environment)] }}
        run: |
          forge script script/Deploy.s.sol --rpc-url $RPC_URL --private-key $PRIVATE_KEY --broadcast
