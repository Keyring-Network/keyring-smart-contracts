{"abi":[{"type":"function","name":"admin","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"blacklistEntity","inputs":[{"name":"policyId","type":"uint256","internalType":"uint256"},{"name":"entity_","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"checkCredential","inputs":[{"name":"entity_","type":"address","internalType":"address"},{"name":"policyId","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"checkCredential","inputs":[{"name":"policyId","type":"uint256","internalType":"uint256"},{"name":"entityA_","type":"address","internalType":"address"},{"name":"entityB_","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"checkCredential","inputs":[{"name":"policyId","type":"uint256","internalType":"uint256"},{"name":"entity_","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"collectFees","inputs":[{"name":"to","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createCredential","inputs":[{"name":"tradingAddress","type":"address","internalType":"address"},{"name":"policyId","type":"uint256","internalType":"uint256"},{"name":"validFrom","type":"uint256","internalType":"uint256"},{"name":"validUntil","type":"uint256","internalType":"uint256"},{"name":"cost","type":"uint256","internalType":"uint256"},{"name":"key","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"},{"name":"backdoor","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"entityBlacklisted","inputs":[{"name":"policyId","type":"uint256","internalType":"uint256"},{"name":"entity_","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"entityData","inputs":[{"name":"policyId","type":"uint256","internalType":"uint256"},{"name":"entity_","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple","internalType":"struct ICoreV2Base.EntityData","components":[{"name":"blacklisted","type":"bool","internalType":"bool"},{"name":"exp","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"entityExp","inputs":[{"name":"policyId","type":"uint256","internalType":"uint256"},{"name":"entity_","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getKeyHash","inputs":[{"name":"key","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"keyDetails","inputs":[{"name":"keyHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"tuple","internalType":"struct ICoreV2Base.KeyEntry","components":[{"name":"isValid","type":"bool","internalType":"bool"},{"name":"validFrom","type":"uint64","internalType":"uint64"},{"name":"validTo","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"keyExists","inputs":[{"name":"keyHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyValidFrom","inputs":[{"name":"keyHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"keyValidTo","inputs":[{"name":"keyHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"packAuthMessage","inputs":[{"name":"tradingAddress","type":"address","internalType":"address"},{"name":"policyId","type":"uint256","internalType":"uint256"},{"name":"validFrom","type":"uint256","internalType":"uint256"},{"name":"validUntil","type":"uint256","internalType":"uint256"},{"name":"cost","type":"uint256","internalType":"uint256"},{"name":"backdoor","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"registerKey","inputs":[{"name":"validFrom","type":"uint256","internalType":"uint256"},{"name":"validTo","type":"uint256","internalType":"uint256"},{"name":"key","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokeKey","inputs":[{"name":"keyHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setAdmin","inputs":[{"name":"newAdmin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unblacklistEntity","inputs":[{"name":"policyId","type":"uint256","internalType":"uint256"},{"name":"entity_","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AdminSet","inputs":[{"name":"oldAdmin","type":"address","indexed":true,"internalType":"address"},{"name":"newAdmin","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"CredentialCreated","inputs":[{"name":"policyId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"entity","type":"address","indexed":true,"internalType":"address"},{"name":"exp","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"backdoor","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"CredentialRevoked","inputs":[{"name":"policyId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"entity","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"EntityBlacklisted","inputs":[{"name":"policyId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"entity","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"EntityUnblacklisted","inputs":[{"name":"policyId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"entity","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"KeyRegistered","inputs":[{"name":"keyHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"validFrom","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"validTo","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"publicKey","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"KeyRevoked","inputs":[{"name":"keyHash","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"error","name":"ErrCallerNotAdmin","inputs":[{"name":"caller","type":"address","internalType":"address"}]},{"type":"error","name":"ErrFailedSendOfValue","inputs":[]},{"type":"error","name":"ErrInvalidCredential","inputs":[{"name":"policyId","type":"uint256","internalType":"uint256"},{"name":"entity","type":"address","internalType":"address"},{"name":"reason","type":"string","internalType":"string"}]},{"type":"error","name":"ErrInvalidKeyRegistration","inputs":[{"name":"reason","type":"string","internalType":"string"}]},{"type":"error","name":"ErrKeyNotFound","inputs":[{"name":"keyHash","type":"bytes32","internalType":"bytes32"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"admin()":"f851a440","blacklistEntity(uint256,address)":"2303bdff","checkCredential(address,uint32)":"37deb791","checkCredential(uint256,address)":"8776b120","checkCredential(uint256,address,address)":"466d137b","collectFees(address)":"a480ca79","createCredential(address,uint256,uint256,uint256,uint256,bytes,bytes,bytes)":"642e3d74","entityBlacklisted(uint256,address)":"a3111824","entityData(uint256,address)":"a5e8823c","entityExp(uint256,address)":"4e081d26","getKeyHash(bytes)":"2520d38b","keyDetails(bytes32)":"d43548b0","keyExists(bytes32)":"d6b3fa8a","keyValidFrom(bytes32)":"f260fd93","keyValidTo(bytes32)":"53fe5200","packAuthMessage(address,uint256,uint256,uint256,uint256,bytes)":"fff4cbd0","registerKey(uint256,uint256,bytes)":"c06d332e","revokeKey(bytes32)":"572f2210","setAdmin(address)":"704b6c02","unblacklistEntity(uint256,address)":"4db64cfd"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"ErrCallerNotAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrFailedSendOfValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"entity\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"ErrInvalidCredential\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"ErrInvalidKeyRegistration\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"}],\"name\":\"ErrKeyNotFound\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"entity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"exp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"backdoor\",\"type\":\"bytes\"}],\"name\":\"CredentialCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"entity\",\"type\":\"address\"}],\"name\":\"CredentialRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"entity\",\"type\":\"address\"}],\"name\":\"EntityBlacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"entity\",\"type\":\"address\"}],\"name\":\"EntityUnblacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"validFrom\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"validTo\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"}],\"name\":\"KeyRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"}],\"name\":\"KeyRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"entity_\",\"type\":\"address\"}],\"name\":\"blacklistEntity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entity_\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"policyId\",\"type\":\"uint32\"}],\"name\":\"checkCredential\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"entityA_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"entityB_\",\"type\":\"address\"}],\"name\":\"checkCredential\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"entity_\",\"type\":\"address\"}],\"name\":\"checkCredential\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"collectFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validFrom\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"backdoor\",\"type\":\"bytes\"}],\"name\":\"createCredential\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"entity_\",\"type\":\"address\"}],\"name\":\"entityBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"entity_\",\"type\":\"address\"}],\"name\":\"entityData\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"blacklisted\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"exp\",\"type\":\"uint64\"}],\"internalType\":\"struct ICoreV2Base.EntityData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"entity_\",\"type\":\"address\"}],\"name\":\"entityExp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"getKeyHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"}],\"name\":\"keyDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"validFrom\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"validTo\",\"type\":\"uint64\"}],\"internalType\":\"struct ICoreV2Base.KeyEntry\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"}],\"name\":\"keyValidFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"}],\"name\":\"keyValidTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tradingAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validFrom\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"backdoor\",\"type\":\"bytes\"}],\"name\":\"packAuthMessage\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"validFrom\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validTo\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"registerKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"}],\"name\":\"revokeKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"entity_\",\"type\":\"address\"}],\"name\":\"unblacklistEntity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract manages policy states, credentials, and whitelisting/blacklisting of entities.\",\"errors\":{\"ErrCallerNotAdmin(address)\":[{\"params\":{\"caller\":\"The address of the unauthorized caller.\"}}],\"ErrInvalidCredential(uint256,address,string)\":[{\"params\":{\"entity\":\"The address of the entity.\",\"policyId\":\"The ID of the policy.\",\"reason\":\"The reason for the invalid credential.\"}}],\"ErrInvalidKeyRegistration(string)\":[{\"params\":{\"reason\":\"The reason for the invalid key registration.\"}}],\"ErrKeyNotFound(bytes32)\":[{\"params\":{\"keyHash\":\"The hash of the key that was not found.\"}}]},\"events\":{\"AdminSet(address,address)\":{\"params\":{\"newAdmin\":\"The address of the new admin.\",\"oldAdmin\":\"The address of the old admin.\"}},\"CredentialCreated(uint256,address,uint256,bytes)\":{\"params\":{\"backdoor\":\"The backdoor data.\",\"entity\":\"The address of the entity.\",\"exp\":\"The expiration for the credential.\",\"policyId\":\"The ID of the policy.\"}},\"CredentialRevoked(uint256,address)\":{\"params\":{\"entity\":\"The address of the entity.\",\"policyId\":\"The ID of the policy.\"}},\"EntityBlacklisted(uint256,address)\":{\"params\":{\"entity\":\"The address of the entity.\",\"policyId\":\"The ID of the policy.\"}},\"EntityUnblacklisted(uint256,address)\":{\"params\":{\"entity\":\"The address of the entity.\",\"policyId\":\"The ID of the policy.\"}},\"KeyRegistered(bytes32,uint256,uint256,bytes)\":{\"params\":{\"keyHash\":\"The hash of the key.\",\"publicKey\":\"The public key.\",\"validFrom\":\"The start time of the key's validity.\",\"validTo\":\"The end time of the key's validity.\"}},\"KeyRevoked(bytes32)\":{\"params\":{\"keyHash\":\"The hash of the key.\"}}},\"kind\":\"dev\",\"methods\":{\"admin()\":{\"returns\":{\"_0\":\"The address of the admin.\"}},\"blacklistEntity(uint256,address)\":{\"details\":\"Only callable by the admin.\",\"params\":{\"entity_\":\"The address of the entity to blacklist.\",\"policyId\":\"The ID of the policy.\"}},\"checkCredential(address,uint32)\":{\"params\":{\"entity_\":\"The address of the entity to check.\",\"policyId\":\"The ID of the policy.\"},\"returns\":{\"_0\":\"True if the entity has a valid credential, false otherwise.\"}},\"checkCredential(uint256,address)\":{\"params\":{\"entity_\":\"The address of the entity to check.\",\"policyId\":\"The ID of the policy.\"},\"returns\":{\"_0\":\"True if the entity has a valid credential, false otherwise.\"}},\"checkCredential(uint256,address,address)\":{\"params\":{\"entityA_\":\"The address of the first entity.\",\"entityB_\":\"The address of the second entity.\",\"policyId\":\"The ID of the policy.\"},\"returns\":{\"_0\":\"True if both entities have valid credentials, false otherwise.\"}},\"collectFees(address)\":{\"custom:emits\":\"This function does not emit any events.\",\"custom:requires\":\"msg.sender must be the admin.\",\"custom:throws\":\"ErrCallerNotAdmin if the caller is not the admin.\",\"details\":\"Only callable by the admin.\",\"params\":{\"to\":\"The address to transfer the collected fees to.\"}},\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial admin.\"},\"createCredential(address,uint256,uint256,uint256,uint256,bytes,bytes,bytes)\":{\"params\":{\"backdoor\":\"The backdoor data.\",\"cost\":\"The cost of the credential.\",\"key\":\"The RSA key.\",\"policyId\":\"The policy ID.\",\"signature\":\"The signature.\",\"tradingAddress\":\"The trading address.\",\"validFrom\":\"The time from which a credential is valid.\",\"validUntil\":\"The expiration time of the credential.\"}},\"entityBlacklisted(uint256,address)\":{\"params\":{\"entity_\":\"The address of the entity.\",\"policyId\":\"The ID of the policy.\"},\"returns\":{\"_0\":\"True if the entity is blacklisted, false otherwise.\"}},\"entityData(uint256,address)\":{\"params\":{\"entity_\":\"The address of the entity.\",\"policyId\":\"The ID of the policy.\"},\"returns\":{\"_0\":\"The EntityData struct containing blacklisting and expiration information.\"}},\"entityExp(uint256,address)\":{\"params\":{\"entity_\":\"The address of the entity.\",\"policyId\":\"The ID of the policy.\"},\"returns\":{\"_0\":\"The expiration of the entity credential.\"}},\"getKeyHash(bytes)\":{\"params\":{\"key\":\"The key.\"},\"returns\":{\"_0\":\"The hash of the key.\"}},\"keyDetails(bytes32)\":{\"params\":{\"keyHash\":\"The hash of the key.\"},\"returns\":{\"_0\":\"The KeyEntry struct containing key details.\"}},\"keyExists(bytes32)\":{\"params\":{\"keyHash\":\"The hash of the key.\"},\"returns\":{\"_0\":\"True if the key exists, false otherwise.\"}},\"keyValidFrom(bytes32)\":{\"params\":{\"keyHash\":\"The hash of the key.\"},\"returns\":{\"_0\":\"The start time of the key's validity.\"}},\"keyValidTo(bytes32)\":{\"params\":{\"keyHash\":\"The hash of the key.\"},\"returns\":{\"_0\":\"The end time of the key's validity.\"}},\"packAuthMessage(address,uint256,uint256,uint256,uint256,bytes)\":{\"details\":\"Packing format of the message to be signed.\",\"params\":{\"backdoor\":\"The backdoor data.\",\"cost\":\"The cost of the credential.\",\"policyId\":\"The policy ID.\",\"tradingAddress\":\"The trading address.\",\"validFrom\":\"The time from which a credential is valid.\",\"validUntil\":\"The expiration time of the credential.\"},\"returns\":{\"_0\":\"The encoded message.\"}},\"registerKey(uint256,uint256,bytes)\":{\"details\":\"Only callable by the admin.\",\"params\":{\"key\":\"The RSA key.\",\"validFrom\":\"The start time of the key's validity.\",\"validTo\":\"The end time of the key's validity.\"}},\"revokeKey(bytes32)\":{\"details\":\"Only callable by the admin.\",\"params\":{\"keyHash\":\"The hash of the key to revoke.\"}},\"setAdmin(address)\":{\"details\":\"Only callable by the current admin.\",\"params\":{\"newAdmin\":\"The address of the new admin.\"}},\"unblacklistEntity(uint256,address)\":{\"details\":\"Only callable by the admin.\",\"params\":{\"entity_\":\"The address of the entity to unblacklist.\",\"policyId\":\"The ID of the policy.\"}}},\"stateVariables\":{\"_admin\":{\"details\":\"Address of the admin.\"},\"_entityData\":{\"details\":\"Mapping from policy ID and address to entity data.\"},\"_keys\":{\"details\":\"Mapping from key hash to key entry.\"}},\"title\":\"KeyringCoreV2 Contract\",\"version\":1},\"userdoc\":{\"errors\":{\"ErrCallerNotAdmin(address)\":[{\"notice\":\"Error for unauthorized admin caller.\"}],\"ErrFailedSendOfValue()\":[{\"notice\":\"Error for failed send of value.\"}],\"ErrInvalidCredential(uint256,address,string)\":[{\"notice\":\"Error for expired credential.\"}],\"ErrInvalidKeyRegistration(string)\":[{\"notice\":\"Error for invalid key registration.\"}],\"ErrKeyNotFound(bytes32)\":[{\"notice\":\"Error for key not found.\"}]},\"events\":{\"AdminSet(address,address)\":{\"notice\":\"Event emitted when the admin is set.\"},\"CredentialCreated(uint256,address,uint256,bytes)\":{\"notice\":\"Event emitted when a credential is created.\"},\"CredentialRevoked(uint256,address)\":{\"notice\":\"Event emitted when a credential is revoked.\"},\"EntityBlacklisted(uint256,address)\":{\"notice\":\"Event emitted when an entity is blacklisted.\"},\"EntityUnblacklisted(uint256,address)\":{\"notice\":\"Event emitted when an entity is unblacklisted.\"},\"KeyRegistered(bytes32,uint256,uint256,bytes)\":{\"notice\":\"Event emitted when a key is registered.\"},\"KeyRevoked(bytes32)\":{\"notice\":\"Event emitted when a key is revoked.\"}},\"kind\":\"user\",\"methods\":{\"admin()\":{\"notice\":\"Returns the address of the admin.\"},\"blacklistEntity(uint256,address)\":{\"notice\":\"Blacklists an entity.\"},\"checkCredential(address,uint32)\":{\"notice\":\"Checks if an entity has a valid credential and supports legacy interface.\"},\"checkCredential(uint256,address)\":{\"notice\":\"Checks if an entity has a valid credential.\"},\"checkCredential(uint256,address,address)\":{\"notice\":\"Checks if two entities have valid credentials.\"},\"collectFees(address)\":{\"notice\":\"Collects fees and transfers them to the specified address.\"},\"createCredential(address,uint256,uint256,uint256,uint256,bytes,bytes,bytes)\":{\"notice\":\"Creates a credential for an entity.\"},\"entityBlacklisted(uint256,address)\":{\"notice\":\"Checks if an entity is blacklisted for a specific policy.\"},\"entityData(uint256,address)\":{\"notice\":\"Returns the data associated with a specific entity.\"},\"entityExp(uint256,address)\":{\"notice\":\"Returns the expiration of an entity for a specific policy.\"},\"getKeyHash(bytes)\":{\"notice\":\"Returns the hash of a key.\"},\"keyDetails(bytes32)\":{\"notice\":\"Returns the details of a key.\"},\"keyExists(bytes32)\":{\"notice\":\"Checks if a key exists.\"},\"keyValidFrom(bytes32)\":{\"notice\":\"Returns the validity start time of a key.\"},\"keyValidTo(bytes32)\":{\"notice\":\"Returns the validity end time of a key.\"},\"registerKey(uint256,uint256,bytes)\":{\"notice\":\"Registers a new RSA key.\"},\"revokeKey(bytes32)\":{\"notice\":\"Revokes an RSA key.\"},\"setAdmin(address)\":{\"notice\":\"Sets a new admin.\"},\"unblacklistEntity(uint256,address)\":{\"notice\":\"Removes an entity from the blacklist.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/base/KeyringCoreV2Base.sol\":\"KeyringCoreV2Base\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/base/KeyringCoreV2Base.sol\":{\"keccak256\":\"0x95b8b401886d0ad626bac939906f1343d51a2b8d0172be20889828f8b80466af\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fed72e874524595b3de22416dc7c46d31fc43ecc9a3baf61413870ec6fa80d95\",\"dweb:/ipfs/QmdePFJxoX76YCSksjjFtpDc4qKSgjhi7LLoVLsRUF91SL\"]},\"src/interfaces/ICoreV2Base.sol\":{\"keccak256\":\"0x444a5f8c654f2d620316726a5db070c3c35fc0b854f8d822c634523114e60855\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://81573ccee1cc390203bd58fa72474e0b8ee1b0e4fea7a18e111d67ad6384d4c0\",\"dweb:/ipfs/QmaWouqyvYwgzpGR8RAFbFUhLcRBVTeNQ2PssbiYQTHUor\"]},\"src/lib/RsaMessagePacking.sol\":{\"keccak256\":\"0x9f6c65e034c4280f1b827fb19ecce4469f4a02d72c4540de39cedd157cfc3210\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3206fde204f3b5c9406d01f6ee1785236724c045b25e90c8a492b326187c083c\",\"dweb:/ipfs/QmVs4cDDUUrkjAuDjscLw3iycKyeKMhZcksGxe5fup1vcT\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"type":"error","name":"ErrCallerNotAdmin"},{"inputs":[],"type":"error","name":"ErrFailedSendOfValue"},{"inputs":[{"internalType":"uint256","name":"policyId","type":"uint256"},{"internalType":"address","name":"entity","type":"address"},{"internalType":"string","name":"reason","type":"string"}],"type":"error","name":"ErrInvalidCredential"},{"inputs":[{"internalType":"string","name":"reason","type":"string"}],"type":"error","name":"ErrInvalidKeyRegistration"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"}],"type":"error","name":"ErrKeyNotFound"},{"inputs":[{"internalType":"address","name":"oldAdmin","type":"address","indexed":true},{"internalType":"address","name":"newAdmin","type":"address","indexed":true}],"type":"event","name":"AdminSet","anonymous":false},{"inputs":[{"internalType":"uint256","name":"policyId","type":"uint256","indexed":true},{"internalType":"address","name":"entity","type":"address","indexed":true},{"internalType":"uint256","name":"exp","type":"uint256","indexed":true},{"internalType":"bytes","name":"backdoor","type":"bytes","indexed":false}],"type":"event","name":"CredentialCreated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"policyId","type":"uint256","indexed":true},{"internalType":"address","name":"entity","type":"address","indexed":true}],"type":"event","name":"CredentialRevoked","anonymous":false},{"inputs":[{"internalType":"uint256","name":"policyId","type":"uint256","indexed":true},{"internalType":"address","name":"entity","type":"address","indexed":true}],"type":"event","name":"EntityBlacklisted","anonymous":false},{"inputs":[{"internalType":"uint256","name":"policyId","type":"uint256","indexed":true},{"internalType":"address","name":"entity","type":"address","indexed":true}],"type":"event","name":"EntityUnblacklisted","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32","indexed":true},{"internalType":"uint256","name":"validFrom","type":"uint256","indexed":true},{"internalType":"uint256","name":"validTo","type":"uint256","indexed":true},{"internalType":"bytes","name":"publicKey","type":"bytes","indexed":false}],"type":"event","name":"KeyRegistered","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32","indexed":true}],"type":"event","name":"KeyRevoked","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"policyId","type":"uint256"},{"internalType":"address","name":"entity_","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"blacklistEntity"},{"inputs":[{"internalType":"address","name":"entity_","type":"address"},{"internalType":"uint32","name":"policyId","type":"uint32"}],"stateMutability":"view","type":"function","name":"checkCredential","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"policyId","type":"uint256"},{"internalType":"address","name":"entityA_","type":"address"},{"internalType":"address","name":"entityB_","type":"address"}],"stateMutability":"view","type":"function","name":"checkCredential","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"policyId","type":"uint256"},{"internalType":"address","name":"entity_","type":"address"}],"stateMutability":"view","type":"function","name":"checkCredential","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"collectFees"},{"inputs":[{"internalType":"address","name":"tradingAddress","type":"address"},{"internalType":"uint256","name":"policyId","type":"uint256"},{"internalType":"uint256","name":"validFrom","type":"uint256"},{"internalType":"uint256","name":"validUntil","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"bytes","name":"key","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes","name":"backdoor","type":"bytes"}],"stateMutability":"payable","type":"function","name":"createCredential"},{"inputs":[{"internalType":"uint256","name":"policyId","type":"uint256"},{"internalType":"address","name":"entity_","type":"address"}],"stateMutability":"view","type":"function","name":"entityBlacklisted","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"policyId","type":"uint256"},{"internalType":"address","name":"entity_","type":"address"}],"stateMutability":"view","type":"function","name":"entityData","outputs":[{"internalType":"struct ICoreV2Base.EntityData","name":"","type":"tuple","components":[{"internalType":"bool","name":"blacklisted","type":"bool"},{"internalType":"uint64","name":"exp","type":"uint64"}]}]},{"inputs":[{"internalType":"uint256","name":"policyId","type":"uint256"},{"internalType":"address","name":"entity_","type":"address"}],"stateMutability":"view","type":"function","name":"entityExp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes","name":"key","type":"bytes"}],"stateMutability":"pure","type":"function","name":"getKeyHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"}],"stateMutability":"view","type":"function","name":"keyDetails","outputs":[{"internalType":"struct ICoreV2Base.KeyEntry","name":"","type":"tuple","components":[{"internalType":"bool","name":"isValid","type":"bool"},{"internalType":"uint64","name":"validFrom","type":"uint64"},{"internalType":"uint64","name":"validTo","type":"uint64"}]}]},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"}],"stateMutability":"view","type":"function","name":"keyValidFrom","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"}],"stateMutability":"view","type":"function","name":"keyValidTo","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"tradingAddress","type":"address"},{"internalType":"uint256","name":"policyId","type":"uint256"},{"internalType":"uint256","name":"validFrom","type":"uint256"},{"internalType":"uint256","name":"validUntil","type":"uint256"},{"internalType":"uint256","name":"cost","type":"uint256"},{"internalType":"bytes","name":"backdoor","type":"bytes"}],"stateMutability":"pure","type":"function","name":"packAuthMessage","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"uint256","name":"validFrom","type":"uint256"},{"internalType":"uint256","name":"validTo","type":"uint256"},{"internalType":"bytes","name":"key","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"registerKey"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"revokeKey"},{"inputs":[{"internalType":"address","name":"newAdmin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setAdmin"},{"inputs":[{"internalType":"uint256","name":"policyId","type":"uint256"},{"internalType":"address","name":"entity_","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"unblacklistEntity"}],"devdoc":{"kind":"dev","methods":{"admin()":{"returns":{"_0":"The address of the admin."}},"blacklistEntity(uint256,address)":{"details":"Only callable by the admin.","params":{"entity_":"The address of the entity to blacklist.","policyId":"The ID of the policy."}},"checkCredential(address,uint32)":{"params":{"entity_":"The address of the entity to check.","policyId":"The ID of the policy."},"returns":{"_0":"True if the entity has a valid credential, false otherwise."}},"checkCredential(uint256,address)":{"params":{"entity_":"The address of the entity to check.","policyId":"The ID of the policy."},"returns":{"_0":"True if the entity has a valid credential, false otherwise."}},"checkCredential(uint256,address,address)":{"params":{"entityA_":"The address of the first entity.","entityB_":"The address of the second entity.","policyId":"The ID of the policy."},"returns":{"_0":"True if both entities have valid credentials, false otherwise."}},"collectFees(address)":{"custom:emits":"This function does not emit any events.","custom:requires":"msg.sender must be the admin.","custom:throws":"ErrCallerNotAdmin if the caller is not the admin.","details":"Only callable by the admin.","params":{"to":"The address to transfer the collected fees to."}},"constructor":{"details":"Initializes the contract setting the deployer as the initial admin."},"createCredential(address,uint256,uint256,uint256,uint256,bytes,bytes,bytes)":{"params":{"backdoor":"The backdoor data.","cost":"The cost of the credential.","key":"The RSA key.","policyId":"The policy ID.","signature":"The signature.","tradingAddress":"The trading address.","validFrom":"The time from which a credential is valid.","validUntil":"The expiration time of the credential."}},"entityBlacklisted(uint256,address)":{"params":{"entity_":"The address of the entity.","policyId":"The ID of the policy."},"returns":{"_0":"True if the entity is blacklisted, false otherwise."}},"entityData(uint256,address)":{"params":{"entity_":"The address of the entity.","policyId":"The ID of the policy."},"returns":{"_0":"The EntityData struct containing blacklisting and expiration information."}},"entityExp(uint256,address)":{"params":{"entity_":"The address of the entity.","policyId":"The ID of the policy."},"returns":{"_0":"The expiration of the entity credential."}},"getKeyHash(bytes)":{"params":{"key":"The key."},"returns":{"_0":"The hash of the key."}},"keyDetails(bytes32)":{"params":{"keyHash":"The hash of the key."},"returns":{"_0":"The KeyEntry struct containing key details."}},"keyExists(bytes32)":{"params":{"keyHash":"The hash of the key."},"returns":{"_0":"True if the key exists, false otherwise."}},"keyValidFrom(bytes32)":{"params":{"keyHash":"The hash of the key."},"returns":{"_0":"The start time of the key's validity."}},"keyValidTo(bytes32)":{"params":{"keyHash":"The hash of the key."},"returns":{"_0":"The end time of the key's validity."}},"packAuthMessage(address,uint256,uint256,uint256,uint256,bytes)":{"details":"Packing format of the message to be signed.","params":{"backdoor":"The backdoor data.","cost":"The cost of the credential.","policyId":"The policy ID.","tradingAddress":"The trading address.","validFrom":"The time from which a credential is valid.","validUntil":"The expiration time of the credential."},"returns":{"_0":"The encoded message."}},"registerKey(uint256,uint256,bytes)":{"details":"Only callable by the admin.","params":{"key":"The RSA key.","validFrom":"The start time of the key's validity.","validTo":"The end time of the key's validity."}},"revokeKey(bytes32)":{"details":"Only callable by the admin.","params":{"keyHash":"The hash of the key to revoke."}},"setAdmin(address)":{"details":"Only callable by the current admin.","params":{"newAdmin":"The address of the new admin."}},"unblacklistEntity(uint256,address)":{"details":"Only callable by the admin.","params":{"entity_":"The address of the entity to unblacklist.","policyId":"The ID of the policy."}}},"version":1},"userdoc":{"kind":"user","methods":{"admin()":{"notice":"Returns the address of the admin."},"blacklistEntity(uint256,address)":{"notice":"Blacklists an entity."},"checkCredential(address,uint32)":{"notice":"Checks if an entity has a valid credential and supports legacy interface."},"checkCredential(uint256,address)":{"notice":"Checks if an entity has a valid credential."},"checkCredential(uint256,address,address)":{"notice":"Checks if two entities have valid credentials."},"collectFees(address)":{"notice":"Collects fees and transfers them to the specified address."},"createCredential(address,uint256,uint256,uint256,uint256,bytes,bytes,bytes)":{"notice":"Creates a credential for an entity."},"entityBlacklisted(uint256,address)":{"notice":"Checks if an entity is blacklisted for a specific policy."},"entityData(uint256,address)":{"notice":"Returns the data associated with a specific entity."},"entityExp(uint256,address)":{"notice":"Returns the expiration of an entity for a specific policy."},"getKeyHash(bytes)":{"notice":"Returns the hash of a key."},"keyDetails(bytes32)":{"notice":"Returns the details of a key."},"keyExists(bytes32)":{"notice":"Checks if a key exists."},"keyValidFrom(bytes32)":{"notice":"Returns the validity start time of a key."},"keyValidTo(bytes32)":{"notice":"Returns the validity end time of a key."},"registerKey(uint256,uint256,bytes)":{"notice":"Registers a new RSA key."},"revokeKey(bytes32)":{"notice":"Revokes an RSA key."},"setAdmin(address)":{"notice":"Sets a new admin."},"unblacklistEntity(uint256,address)":{"notice":"Removes an entity from the blacklist."}},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/base/KeyringCoreV2Base.sol":"KeyringCoreV2Base"},"evmVersion":"paris","libraries":{}},"sources":{"src/base/KeyringCoreV2Base.sol":{"keccak256":"0x95b8b401886d0ad626bac939906f1343d51a2b8d0172be20889828f8b80466af","urls":["bzz-raw://fed72e874524595b3de22416dc7c46d31fc43ecc9a3baf61413870ec6fa80d95","dweb:/ipfs/QmdePFJxoX76YCSksjjFtpDc4qKSgjhi7LLoVLsRUF91SL"],"license":"UNLICENSED"},"src/interfaces/ICoreV2Base.sol":{"keccak256":"0x444a5f8c654f2d620316726a5db070c3c35fc0b854f8d822c634523114e60855","urls":["bzz-raw://81573ccee1cc390203bd58fa72474e0b8ee1b0e4fea7a18e111d67ad6384d4c0","dweb:/ipfs/QmaWouqyvYwgzpGR8RAFbFUhLcRBVTeNQ2PssbiYQTHUor"],"license":"UNLICENSED"},"src/lib/RsaMessagePacking.sol":{"keccak256":"0x9f6c65e034c4280f1b827fb19ecce4469f4a02d72c4540de39cedd157cfc3210","urls":["bzz-raw://3206fde204f3b5c9406d01f6ee1785236724c045b25e90c8a492b326187c083c","dweb:/ipfs/QmVs4cDDUUrkjAuDjscLw3iycKyeKMhZcksGxe5fup1vcT"],"license":"UNLICENSED"}},"version":1},"id":21}