services:
  node:
    image: smart-contracts:latest
    ports:
    - "8545:8545"
    command: |
      /bin/sh -c '
        bash ./bin/testnet-config.sh \
          --host 0.0.0.0 \
          --port 8545 \
          --chain 1337 \
          --genesis ./genesis.json \
          --fund-account 0x7C010FD1B3e279ac063d862199484254f27C2C44 && \

        while [ ! -f /tmp/tests_done ]; \
          do sleep 1; \
        done; \
      '
    healthcheck:
      test: [ "CMD", "curl", "--fail", "-X", "POST", "-H", "Content-Type: application/json", "--data", '{"jsonrpc":"2.0","method":"eth_chainId","params":[],"id":1}', "http://localhost:8545" ]
      interval: "1s"
      timeout: "10s"
      retries: 10
      start_period: "1s"
    restart: "no"
    volumes:
    - node-status:/tmp
    - contracts:/usr/src/app/out

  deploy-contracts:
    image: smart-contracts:latest
    depends_on:
      node:
        condition: service_healthy
    command: |
      /bin/sh -c '
        # Deploy contracts
        bash ./bin/deploy.sh \
          --rpc http://node:8545 \
          --chain 1337 \
          --private-key 0x024cf65eb3bc550a1a6675aa21d146d7476fc5b62715d24fb2e0027647a213af && \

        # Signal to docker compose healthcheck that contracts are deployed
        touch contracts-deployed && \

        # Noop until tests are done
        while [ ! -f /tmp/tests_done ]; \
          do sleep 1; \
        done; \
      '
    healthcheck:
      test: [ "CMD", "ls", "contracts-deployed" ]
      interval: "1s"
      timeout: "40s"
      retries: 20
      start_period: "1s"
    restart: "no"
    volumes:
    - node-status:/tmp
    - contracts:/usr/src/app/out
volumes:
  node-status:
  contracts:
